name: CI/CD

on:
  push:
    branches:
      - master
      - dev
  workflow_dispatch:

concurrency: ${{ github.ref }}

env:
  ENV_KEY: env-vars
  ENV_FILE: env.yaml
  PROJECT_ID: voltaic-country-280607
  GCP_SA: bivuanem@voltaic-country-280607.iam.gserviceaccount.com

jobs:
  set-env:
    runs-on: ubuntu-latest
    outputs:
      fn-name: ${{ steps.set-fn-name.outputs.fn-name }}
    steps: 
      - name: Set env vars (dev)
        if: endsWith(github.ref, '/dev')
        run: |
          echo "FUNCTION_NAME=vuanem-ecommerce-service-dev" >> $GITHUB_ENV
          echo "PYTHON_ENV=dev" >> $GITHUB_ENV
          echo "TELEGRAM_TOKEN=${{ secrets.TELEGRAM_TOKEN_DEV }}" >> $GITHUB_ENV

      - name: Set env vars (prod)
        if: endsWith(github.ref, '/master')
        run: |
          echo "FUNCTION_NAME=vuanem-ecommerce-service" >> $GITHUB_ENV
          echo "PYTHON_ENV=prod" >> $GITHUB_ENV
          echo "TELEGRAM_TOKEN=${{ secrets.TELEGRAM_TOKEN }}" >> $GITHUB_ENV

      - id: set-fn-name
        name: Set Function Name
        run: echo "::set-output name=fn-name::${{ env.FUNCTION_NAME}}"
      
      - name: Create ${{ env.ENV_KEY }}
        run: |
          echo "PYTHON_ENV: ${{ env.PYTHON_ENV }}" >> ${{ env.ENV_FILE }}
          echo "TELEGRAM_TOKEN: ${{ env.TELEGRAM_TOKEN }}" >> ${{ env.ENV_FILE }}
          echo "CONSUMER_KEY: ${{ secrets.CONSUMER_KEY }}" >> ${{ env.ENV_FILE }}
          echo "CONSUMER_SECRET: ${{ secrets.CONSUMER_SECRET }}" >> ${{ env.ENV_FILE }}
          echo "ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}" >> ${{ env.ENV_FILE }}
          echo "TOKEN_SECRET: ${{ secrets.TOKEN_SECRET }}" >> ${{ env.ENV_FILE }}
          echo "ACCOUNT_ID: ${{ secrets.ACCOUNT_ID }}" >> ${{ env.ENV_FILE }}
          echo "TIKI_CLIENT_SECRET: ${{ secrets.TIKI_CLIENT_SECRET }}" >> ${{ env.ENV_FILE }}
          echo "LAZ_APP_SECRET: ${{ secrets.LAZ_APP_SECRET }}" >> ${{ env.ENV_FILE }}
          echo "SHOPEE_API_KEY: ${{ secrets.SHOPEE_API_KEY }}" >> ${{ env.ENV_FILE }}
          echo "SENDGRID_API_KEY: ${{ secrets.SECRET_KEY }}" >> ${{ env.ENV_FILE }}

      - name: Upload ${{ env.ENV_FILE }}
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.ENV_KEY }}
          path: ${{ env.ENV_FILE }}

      
  deploy:
    runs-on: ubuntu-latest
    needs: set-env
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download ${{ env.ENV_FILE }}
        uses: actions/download-artifact@v2
        with:
          name: ${{ env.ENV_KEY }}

      - name: Auth
        uses: "google-github-actions/auth@v0"
        with:
          credentials_json: "${{ secrets.GCP_SA_KEY }}"

      - name: Deploy
        uses: google-github-actions/deploy-cloud-functions@v0
        with:
          name: ${{ needs.set-env.outputs.fn-name }}
          entry_point: main
          runtime: python39
          memory_mb: 2048MB,
          timeout: 530,
          service_account_email: ${{ env.GCP_SA }}
          env_vars_file: ${{ env.ENV_FILE }}
